{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nconst useScrollToTop = () => {\n  _s();\n  const {\n    pathname\n  } = useLocation();\n  useEffect(() => {\n    console.log('Route changed to:', pathname, 'Scrolling to top...');\n\n    // Use a small delay to ensure the DOM has fully updated\n    const scrollToTop = () => {\n      console.log('Executing scroll to top...');\n\n      // Use multiple methods to ensure scrolling works\n      window.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n\n      // Fallback for older browsers\n      if (window.scrollY !== 0) {\n        window.scrollTo(0, 0);\n      }\n\n      // Also try scrolling the document element\n      if (document.documentElement) {\n        document.documentElement.scrollTop = 0;\n      }\n      if (document.body) {\n        document.body.scrollTop = 0;\n      }\n      console.log('Scroll to top completed. Current scroll position:', window.scrollY);\n    };\n\n    // Immediate scroll\n    scrollToTop();\n\n    // Also try after a small delay to ensure everything is rendered\n    const timeoutId = setTimeout(scrollToTop, 100);\n    return () => clearTimeout(timeoutId);\n  }, [pathname]);\n};\n_s(useScrollToTop, \"+8VPq4+XDMjo/kjL3WLkbwU2Amg=\", false, function () {\n  return [useLocation];\n});\nexport default useScrollToTop;","map":{"version":3,"names":["useEffect","useLocation","useScrollToTop","_s","pathname","console","log","scrollToTop","window","scrollTo","top","left","behavior","scrollY","document","documentElement","scrollTop","body","timeoutId","setTimeout","clearTimeout"],"sources":["/Users/alessandrodossantospinto/Documents/band-website/src/hooks/useScrollToTop.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst useScrollToTop = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    console.log('Route changed to:', pathname, 'Scrolling to top...');\n    \n    // Use a small delay to ensure the DOM has fully updated\n    const scrollToTop = () => {\n      console.log('Executing scroll to top...');\n      \n      // Use multiple methods to ensure scrolling works\n      window.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n      \n      // Fallback for older browsers\n      if (window.scrollY !== 0) {\n        window.scrollTo(0, 0);\n      }\n      \n      // Also try scrolling the document element\n      if (document.documentElement) {\n        document.documentElement.scrollTop = 0;\n      }\n      \n      if (document.body) {\n        document.body.scrollTop = 0;\n      }\n      \n      console.log('Scroll to top completed. Current scroll position:', window.scrollY);\n    };\n\n    // Immediate scroll\n    scrollToTop();\n    \n    // Also try after a small delay to ensure everything is rendered\n    const timeoutId = setTimeout(scrollToTop, 100);\n    \n    return () => clearTimeout(timeoutId);\n  }, [pathname]);\n};\n\nexport default useScrollToTop;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAS,CAAC,GAAGH,WAAW,CAAC,CAAC;EAElCD,SAAS,CAAC,MAAM;IACdK,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,QAAQ,EAAE,qBAAqB,CAAC;;IAEjE;IACA,MAAMG,WAAW,GAAGA,CAAA,KAAM;MACxBF,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;;MAEzC;MACAE,MAAM,CAACC,QAAQ,CAAC;QACdC,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,QAAQ,EAAE;MACZ,CAAC,CAAC;;MAEF;MACA,IAAIJ,MAAM,CAACK,OAAO,KAAK,CAAC,EAAE;QACxBL,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MACvB;;MAEA;MACA,IAAIK,QAAQ,CAACC,eAAe,EAAE;QAC5BD,QAAQ,CAACC,eAAe,CAACC,SAAS,GAAG,CAAC;MACxC;MAEA,IAAIF,QAAQ,CAACG,IAAI,EAAE;QACjBH,QAAQ,CAACG,IAAI,CAACD,SAAS,GAAG,CAAC;MAC7B;MAEAX,OAAO,CAACC,GAAG,CAAC,mDAAmD,EAAEE,MAAM,CAACK,OAAO,CAAC;IAClF,CAAC;;IAED;IACAN,WAAW,CAAC,CAAC;;IAEb;IACA,MAAMW,SAAS,GAAGC,UAAU,CAACZ,WAAW,EAAE,GAAG,CAAC;IAE9C,OAAO,MAAMa,YAAY,CAACF,SAAS,CAAC;EACtC,CAAC,EAAE,CAACd,QAAQ,CAAC,CAAC;AAChB,CAAC;AAACD,EAAA,CA1CID,cAAc;EAAA,QACGD,WAAW;AAAA;AA2ClC,eAAeC,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}